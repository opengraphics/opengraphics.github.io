/* Helpful constructs */
$small-width: 800px;
$medium-width: 1080px;
$column-count: 12;
$column-width: 100% / 12;
$gutter-size: 1%;

$screen: "only screen";
$small: "#{$screen} and (max-width: #{$small-width})";
$small-up: $screen;

$medium: "#{$screen} and (min-width: #{$small-width}) and (max-width: #{$medium-width})";
$medium-up: "#{$screen} and (min-width: #{$small-width})";
$medium-down: "#{$screen} and (max-width: #{$medium-width})";

$large: "#{$screen} and (min-width: #{$medium-width})";
$large-down: $screen;

@mixin columns($count, $target: "all") {
	@if target == "all" {
		float: left;
		width: 0% + $count * $column-width - $gutter-size;
		margin-left: $gutter-size / 2;
		margin-right: $gutter-size / 2;

		&.collapse {
			margin: 0;
		}
	} @else {
		@media #{$target} {
			float: left;
			width: 0% + $count * $column-width - $gutter-size;
			margin-left: $gutter-size / 2;
			margin-right: $gutter-size / 2;

			&.collapse {
				margin: 0;
			}
		}
	}
}	

/* Columns */
@for $i from 0 through $column-count {
	.small-col-#{$i} {
		@include columns($i, $small);
	}

	.medium-col-#{$i} {
		@include columns($i, $medium);
	}

	.large-col-#{$i} {
		@include columns($i, $large);
	}

	.col-#{$i} {
		@include columns($i);
	}
}

.row {
	display: block;
	clear: both;
	margin-left: auto;
	margin-right: auto;
	width: 100%;

	@media #{$large} {
		max-width: $medium-width;
	}

	&+.row {
		margin: 0 8px;

		&.collapse {
			margin: 0;
		}
	}

	[class*="col"]:last-of-type {
		float: right;
	}
}